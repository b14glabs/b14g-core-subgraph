enum OrderActionType {
    CreateOrder
    StakeCoreToOrder
    WithdrawCoreFromOrder
    ClaimCoreForBTCHolder
    ClaimCoreForCoreHolder

}
enum VaultActionType{
    StakeCoreToVault
    RedeemNormallyCoreFromVault
    RedeemInstantlyCoreFromVault
    WithdrawCoreFromVault
    ReInvestVault
}



type User @entity {
    id: ID!
    dualCoreBalance: BigInt!
    coreStakedInOrder: BigInt!
    stakedOrder: [StakedInOrder!]!
    orderActionActivities: [OrderAction!]!
    vaultActionActivities: [VaultAction!]!
}
type StakedInOrder @entity{

    id: ID! #orderId+userId
    amount: BigInt!
}

type Vault @entity {
    id: ID!
    totalStaked: BigInt!
    activities:[VaultAction!]!
}


type Order @entity {
    id: ID!
    owner: Bytes!
    btcAmount: BigInt
    unlockTime: Int

    # creation stats
    createdAtTimestamp: BigInt!
    createdAtBlockNumber: BigInt!
    activities:[OrderAction!]!
}




type OrderAction @entity{
    id: ID!
    txHash: Bytes!
    blockNumber: BigInt!
    timestamp: BigInt!
    type: OrderActionType!
    from: Bytes!
    order: Bytes!
    amount: BigInt
}

type VaultAction @entity{
    id: ID!
    txHash: Bytes!
    blockNumber: BigInt!
    timestamp: BigInt!
    type: VaultActionType!
    from: Bytes!
    amount: BigInt!
}



type DualCoreTransfer @entity {
    # transaction hash + "-" + index in mints Transaction array
    id: ID!
    transaction: Bytes!
    timestamp: BigInt! # need this to pull recent txns for specific token or pair
    amount: BigInt
    to: Bytes
    from: Bytes
    logIndex: BigInt
}

