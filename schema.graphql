enum OrderActionType {
    CreateOrder
    StakeCoreToOrder
    WithdrawCoreFromOrder
    ClaimCoreForBTCHolder
    ClaimCoreForCoreHolder

}
enum VaultActionType{
    StakeCoreToVault
    RedeemNormallyCoreFromVault
    RedeemInstantlyCoreFromVault
    WithdrawCoreFromVault
    ReInvestVault
}

type User @entity {
  id: Bytes!
  dualCoreBalance: BigInt!
  coreStakedInOrder: BigInt!
  stakedOrder: [StakedInOrder!]! @derivedFrom(field: "user")
  orderActionActivities: [OrderAction!]! @derivedFrom(field: "from")
  vaultActionActivities: [VaultAction!]! @derivedFrom(field: "from")

  # vault
  totalVaultAction: Int!
  totalUnbondAction: Int!
  totalDepositAction: Int!
  totalVaultWithdrawAction: Int!
  totalInstantRedeemAction: Int!

  # order
  totalOrderAction: Int!
  totalStakeAction: Int!
  totalWithdrawAction: Int!
  totalClaimBtcAction: Int!
  totalClaimCoreAction: Int!
}

type StakedInOrder @entity{

    id: Bytes! #orderId+userId
    amount: BigInt!
    user: User!
}

type Vault @entity {
  id: Bytes!
  totalStaked: BigInt!
  totalActions: Int!
  totalDepositActions: Int!
  totalUnbondActions: Int!
  totalInstantRedeemActions: Int!
  totalWithdrawActions: Int!
  totalReInvestActions: Int!
  activities: [VaultAction!]! @derivedFrom(field: "to")
}

type Order @entity {
  id: Bytes!
  owner: Bytes!
  btcAmount: BigInt
  unlockTime: Int
  validator: Bytes
  bitcoinLockTx: Bytes
  fee: BigInt!
  rewardSharingPortion: BigInt!
  btcEarned: BigInt!
  coreEarned: BigInt!

  realtimeTier: BigInt!
  realtimeStakeAmount: BigInt!
  # creation stats
  totalActions: Int!
  totalStakeActions: Int!
  totalWithdrawActions: Int!
  totalClaimCoreActions: Int!
  totalClaimBtcActions: Int!

  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!
  activities: [OrderAction!]! @derivedFrom(field: "order")
}




type OrderAction @entity (immutable: true){
    id: Bytes!
    txHash: Bytes!
    blockNumber: BigInt!
    timestamp: BigInt!
    type: OrderActionType!
    from: User!
    order: Order!
    amount: BigInt
    totalCoreStaked: BigInt!
}

type VaultAction @entity (immutable: true){
    id: Bytes!
    txHash: Bytes!
    blockNumber: BigInt!
    timestamp: BigInt!
    type: VaultActionType!
    from: User!
    to: Vault!
    amount: BigInt!
    totalCoreStaked: BigInt!
}



type DualCoreTransfer @entity (immutable: true){
    # transaction hash + "-" + index in mints Transaction array
    id: Bytes!
    transaction: Bytes!
    timestamp: BigInt! # need this to pull recent txns for specific token or pair
    amount: BigInt
    to: Bytes
    from: Bytes
    logIndex: BigInt
}

type Stats @entity {
    id: ID!
    totalStaker: Int!
    totalCoreStaked: BigInt!
    totalDualCore: BigInt!
    #   totalBtcStaked: BigInt!
    #   listOrder: [Order!]!
    totalEarned: BigInt!
}
