specVersion: 0.0.7
description: B14G
repository: https://github.com/b14g-core-subgraph
schema:
  file: ./schema.graphql
features:
  - nonFatalErrors
  - grafting
# graft:
#   base: QmP7qBXBUppWU5djGkwLp4NobHLxWT1Bmei3kDanNu6Q2d
#   block:  24169200
dataSources:
  - kind: ethereum/contract
    name: DualCoreToken
    network: core
    source:
      address: '0xc5555eA27e63cd89f8b227deCe2a3916800c0f4F'
      abi: ERC20
      startBlock: 21009080
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/dualCore.ts
      entities:
        - Transfer
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
  - kind: ethereum/contract
    name: Marketplace
    network: core
    source:
      address: '0x04EA61C431F7934d51fEd2aCb2c5F942213f8967'
      abi: Marketplace
      startBlock: 19942200
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/marketplace.ts
      entities:
        - Order
      abis:
        - name: Marketplace
          file: ./abis/marketplace.json
        - name: FairShareOrder
          file: ./abis/fairShareOrder.json
      eventHandlers:
        - event: CreateRewardReceiver(indexed address,indexed address,uint256,uint256)
          handler: handleNewOrder
          # calls:
          #   Marketplace.fee: Marketplace[event.address].fee()
        - event: StakeCoreProxy(indexed address,indexed address,indexed address,uint256)
          handler: handleUserStake
        - event: WithdrawProxy(indexed address,indexed address,indexed address,uint256)
          handler: handleUserWithdraw
        - event: ClaimProxy(indexed address,indexed address,uint256,indexed bool)
          handler: handleClaimProxy
  - kind: ethereum/contract
    name: BitcoinStake
    network: core
    source:
      address: '0x0000000000000000000000000000000000001014'
      abi: BitcoinStake
      startBlock: 19942200
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/bitcoinStake.ts
      entities:
        - Order
      abis:
        - name: BitcoinStake
          file: ./abis/bitcoinStake.json
      eventHandlers:
        - event: delegated(indexed bytes32,indexed address,indexed address,bytes,uint32,uint64,uint256)
          handler: handleBTCStaked
  - kind: ethereum/contract
    name: CoreVault
    network: core
    source:
      address: '0xee21ab613d30330823D35Cf91A84cE964808B83F'
      abi: CoreVault
      startBlock: 21007765
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/coreVault.ts
      entities:
        - Order
      abis:
        - name: CoreVault
          file: ./abis/coreVault.json
      eventHandlers:
        - event: Stake(indexed address,uint256,uint256)
          handler: handleStake
        - event: WithdrawDirect(indexed address,uint256,uint256,uint256)
          handler: handleWithdrawDirect
        - event: Unbond(indexed address,uint256,uint256,uint256)
          handler: handleUnbond
        - event: Withdraw(indexed address,uint256,uint256)
          handler: handleStakeWithdraw
        - event: ClaimReward(uint256,uint256)
          handler: handleClaimReward
        - event: ReInvest(bytes)
          handler: handleReInvest
  - kind: ethereum/contract
    name: Lottery
    network: core
    source:
      address: '0x606499355875Aafe39cF0910962f2BE4b16D5566'
      abi: Lottery
      startBlock: 23448492
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/lottery.ts
      entities:
        - Lottery
      abis:
        - name: Lottery
          file: ./abis/lottery.json
      eventHandlers:
        - event: Deposit(indexed address,indexed address)
          handler: handleDeposit
        - event: Withdraw(indexed address,indexed address)
          handler: handleWithdraw
        - event: ClaimReward(indexed address,uint256)
          handler: handleWinnerClaim
        - event: Start(uint48,uint256)
          handler: handleStartRound
        - event: EndRound(indexed uint256,uint256,uint256,uint256,address[])
          handler: handleEndRound
        - event: ClaimRewards(uint256[],uint256,uint256)
          handler: handleClaimRewards
        - event: RequestRandomness(bytes32)
          handler: handleRequestRandomness
        - event: FullfillRandomness(uint256)
          handler: handleFullFillRandomness
  - kind: ethereum/contract
    name: Yield
    network: core
    source:
      address: '0xaC12840F51495F119290646824E503292607f679'
      abi: Yield
      startBlock: 23448534
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/yieldBtc.ts
      entities:
        - YieldBTC
      abis:
        - name: Yield
          file: ./abis/yieldBtc.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransferToken
  - kind: ethereum/contract
    name: LendingVault
    network: core
    source:
      address: '0xa3CD4D4A568b76CFF01048E134096D2Ba0171C27'
      abi: LendingVault
      startBlock: 24169296
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/lendingVault.ts
      entities:
        - LendingVault
      abis:
        - name: LendingVault
          file: ./abis/lendingVault.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ColendPool
          file: ./abis/aavePool.json
        - name: Pyth
          file: ./abis/pyth.json
        - name: MarketplaceStrategy
          file: ./abis/marketplaceStrategy.json
      eventHandlers:
        - event: Stake(indexed address,uint256)
          handler: handleStake
        - event: Redeem(indexed address,uint256,uint256,uint256)
          handler: handleRedeem
        - event: Withdraw(indexed address,uint256,uint256)
          handler: handleWithdraw
        - event: LendingInvest(uint256,bool,uint256)
          handler: handleLending
        - event: CoreInvest(bytes)
          handler: handleCoreInvest
        - event: ClaimRewardFromStrategy(uint256)
          handler: handleClaimRewardFromStrategy
  - kind: ethereum/contract
    name: FairShare
    network: core
    source:
      address: '0x13E3eC65EFeB0A4583c852F4FaF6b2Fb31Ff04b1'
      abi: FairShareOrder
      startBlock: 25900000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/fairShare.ts
      entities:
        - LendingVault
      abis:
        - name: FairShareOrder
          file: ./abis/fairShareOrder.json
      eventHandlers:
#        - event: WithdrawCoreReward(indexed address,uint256)
#          handler: handleWithdrawCoreReward
#        - event: UnbondReward(indexed address,uint256,uint256)
#          handler: handleUnbondReward
        - event: ClaimReward(indexed address,uint256)
          handler: handleClaimReward
